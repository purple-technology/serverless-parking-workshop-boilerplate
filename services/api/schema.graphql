type Void {
	success: Boolean!
}

enum Gate {
	Entry
	Exit
}

type Mutation {
	openGate(gate: Gate!): Void!
	createReservation(spot: ID!, licensePlate: String!, time: Int!): Void!
	cancelReservation(spot: ID!, licensePlate: String!): Void!
}

type Query {
	parkedCars: [ParkedCar!]!
	reservations: [Reservation!]!
	spots: Spots!
}

type ParkedCar {
	licensePlate: String!
	arrival: Long!
}

type Reservation {
	spot: ID!
	licensePlate: String!
	creationTimestamp: String!
	expirationTimestamp: String!
	carArrived: Boolean!
}

type Spots {
	total: Int!
	taken: Int!
}
